{"ast":null,"code":"var searchForm = document.getElementById(\"search-form\");\nvar locationInput = document.getElementById(\"location-input\");\nsearchForm.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  var location = locationInput.value;\n  getWeatherData(location);\n});\nfunction getWeatherData(location) {\n  if (location.trim() !== \"\") {\n    console.log(\"Obtenir les donn\\xE9es m\\xE9t\\xE9o pour : \" + location);\n  } else {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n        console.log(\"Latitude : \" + latitude + \", Longitude : \" + longitude);\n      }, function (error) {\n        console.log(\"Erreur lors de la récupération de la localisation :\", error.message);\n      });\n    } else {\n      console.log(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n    }\n  }\n}\nexport default App;","map":{"version":3,"names":["searchForm","document","getElementById","locationInput","addEventListener","event","preventDefault","location","value","getWeatherData","trim","console","log","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","message","App"],"sources":["/home/sonia/Documents/test_tech/Typescript/MeteoApp/App.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\n// Récupérer les éléments du DOM\nconst searchForm = document.getElementById(\"search-form\") as HTMLFormElement;\nconst locationInput = document.getElementById(\"location-input\") as HTMLInputElement;\n\n// Événement de soumission du formulaire\nsearchForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const location = locationInput.value;\n  getWeatherData(location);\n});\n\n// Fonction pour obtenir les données météo en utilisant la localisation de l'utilisateur\nfunction getWeatherData(location: string) {\n  // Si l'utilisateur a entré une localisation, utiliser cette localisation pour obtenir les données météo\n  if (location.trim() !== \"\") {\n    // Code pour récupérer les données météo en utilisant l'API météo avec la localisation entrée par l'utilisateur\n    // Vous pouvez utiliser des requêtes HTTP ou des bibliothèques pour cela.\n    console.log(`Obtenir les données météo pour : ${location}`);\n  } else {\n    // Si l'utilisateur n'a pas entré de localisation, essayer de récupérer la localisation de l'utilisateur via l'API de géolocalisation du navigateur\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          console.log(`Latitude : ${latitude}, Longitude : ${longitude}`);\n\n          // Utilisez les coordonnées géographiques (latitude et longitude) pour obtenir les données météo\n          // Vous pouvez utiliser une API météo qui prend en charge la récupération des données météo en utilisant les coordonnées géographiques.\n          // Exemple : getWeatherDataByCoords(latitude, longitude);\n        },\n        (error) => {\n          console.log(\"Erreur lors de la récupération de la localisation :\", error.message);\n        }\n      );\n    } else {\n      console.log(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n    }\n  }\n}\n\n\nexport default App;\n"],"mappings":"AAIA,IAAMA,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAoB;AAC5E,IAAMC,aAAa,GAAGF,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAqB;AAGnFF,UAAU,CAACI,gBAAgB,CAAC,QAAQ,EAAE,UAACC,KAAK,EAAK;EAC/CA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB,IAAMC,QAAQ,GAAGJ,aAAa,CAACK,KAAK;EACpCC,cAAc,CAACF,QAAQ,CAAC;AAC1B,CAAC,CAAC;AAGF,SAASE,cAAcA,CAACF,QAAgB,EAAE;EAExC,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAG1BC,OAAO,CAACC,GAAG,gDAAqCL,QAAU,CAAC;EAC7D,CAAC,MAAM;IAEL,IAAIM,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,UAACC,QAAQ,EAAK;QACZ,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;QACzC,IAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;QAC3CR,OAAO,CAACC,GAAG,iBAAeK,QAAQ,sBAAiBE,SAAW,CAAC;MAKjE,CAAC,EACD,UAACC,KAAK,EAAK;QACTT,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEQ,KAAK,CAACC,OAAO,CAAC;MACnF,CACF,CAAC;IACH,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,iEAAiE,CAAC;IAChF;EACF;AACF;AAGA,eAAeU,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}