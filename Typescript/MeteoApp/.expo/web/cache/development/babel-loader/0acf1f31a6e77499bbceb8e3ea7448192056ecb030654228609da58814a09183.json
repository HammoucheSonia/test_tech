{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.welcomeText,\n      children: \"AppMeteo\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    justifyContent: 'relative',\n    alignItems: 'center'\n  },\n  welcomeText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nvar App_1 = function App_1() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    question = _useState2[0],\n    setQuestion = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    answer = _useState4[0],\n    setAnswer = _useState4[1];\n  var handleQuestionChange = function handleQuestionChange(text) {\n    setQuestion(text);\n  };\n  var handleShowAnswer = function handleShowAnswer() {\n    setAnswer(question);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.questionText,\n      children: \"Posez votre question :\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: question,\n      onChangeText: handleQuestionChange\n    }), _jsx(Button, {\n      title: \"Afficher la r\\xE9ponse\",\n      onPress: handleShowAnswer\n    }), answer !== '' && _jsxs(Text, {\n      style: styles.answerText,\n      children: [\"R\\xE9ponse : \", answer]\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","App","style","styles","container","children","welcomeText","create","flex","backgroundColor","justifyContent","alignItems","fontSize","fontWeight","color","App_1","_useState","useState","_useState2","_slicedToArray","question","setQuestion","_useState3","_useState4","answer","setAnswer","handleQuestionChange","text","handleShowAnswer","questionText","TextInput","input","value","onChangeText","Button","title","onPress","answerText"],"sources":["/home/sonia/Documents/test_tech/Typescript/MeteoApp/App.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst App: React.FC = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.welcomeText}>AppMeteo</Text>\n      {/* Autres composants de votre application ici */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red', // Couleur d'arrière-plan rouge\n    justifyContent: 'relative',\n    alignItems: 'center',\n    //display : block,\n  },\n  welcomeText: {\n    fontSize: 40, // Taille de police de 30\n    fontWeight: 'bold',\n    color: 'white', // Couleur du texte en blanc\n  },\n});\n\n\nconst App_1: React.FC = () => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleQuestionChange = (text: string) => {\n    setQuestion(text);\n  };\n\n  const handleShowAnswer = () => {\n    // Ici, vous pouvez implémenter la logique pour trouver la réponse en fonction de la question\n    // Pour cet exemple, nous allons simplement afficher la question elle-même comme réponse\n    setAnswer(question);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.questionText}>Posez votre question :</Text>\n      <TextInput\n        style={styles.input}\n        value={question}\n        onChangeText={handleQuestionChange}\n      />\n      <Button title=\"Afficher la réponse\" onPress={handleShowAnswer} />\n      {answer !== '' && (\n        <Text style={styles.answerText}>Réponse : {answer}</Text>\n      )}\n    </View>\n  );\n};\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,GAAa,GAAG,SAAhBA,GAAaA,CAAA,EAAS;EAC1B,OACEH,IAAA,CAACJ,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BP,IAAA,CAACH,IAAI;MAACO,KAAK,EAAEC,MAAM,CAACG,WAAY;MAAAD,QAAA,EAAC;IAAQ,CAAM;EAAC,CAE5C,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGP,UAAU,CAACW,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,KAAK;IACtBC,cAAc,EAAE,UAAU;IAC1BC,UAAU,EAAE;EAEd,CAAC;EACDL,WAAW,EAAE;IACXM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAGF,IAAMC,KAAe,GAAG,SAAlBA,KAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAAgCC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAArCI,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA4BL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,IAAY,EAAK;IAC7CN,WAAW,CAACM,IAAI,CAAC;EACnB,CAAC;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAG7BH,SAAS,CAACL,QAAQ,CAAC;EACrB,CAAC;EAED,OACEpB,KAAA,CAACN,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BP,IAAA,CAACH,IAAI;MAACO,KAAK,EAAEC,MAAM,CAAC0B,YAAa;MAAAxB,QAAA,EAAC;IAAsB,CAAM,CAAC,EAC/DP,IAAA,CAACgC,SAAS;MACR5B,KAAK,EAAEC,MAAM,CAAC4B,KAAM;MACpBC,KAAK,EAAEZ,QAAS;MAChBa,YAAY,EAAEP;IAAqB,CACpC,CAAC,EACF5B,IAAA,CAACoC,MAAM;MAACC,KAAK,EAAC,wBAAqB;MAACC,OAAO,EAAER;IAAiB,CAAE,CAAC,EAChEJ,MAAM,KAAK,EAAE,IACZxB,KAAA,CAACL,IAAI;MAACO,KAAK,EAAEC,MAAM,CAACkC,UAAW;MAAAhC,QAAA,GAAC,eAAU,EAACmB,MAAM;IAAA,CAAO,CACzD;EAAA,CACG,CAAC;AAEX,CAAC;AAED,eAAevB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}